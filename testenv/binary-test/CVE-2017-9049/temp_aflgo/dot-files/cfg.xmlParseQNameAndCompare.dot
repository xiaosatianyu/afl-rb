digraph "CFG for 'xmlParseQNameAndCompare' function" {
	label="CFG for 'xmlParseQNameAndCompare' function";

	Node0x56de7a0 [shape=record,label="{parser.c:8934:|{<s0>T|<s1>F}}"];
	Node0x56de7a0:s0 -> Node0x56f07f0;
	Node0x56de7a0:s1 -> Node0x56f0840;
	Node0x56f07f0 [shape=record,label="{parser.c:8941:}"];
	Node0x56f07f0 -> Node0x56e5620;
	Node0x56f0840 [shape=record,label="{parser.c:8943:|{<s0>T|<s1>F}}"];
	Node0x56f0840:s0 -> Node0x56f0f00;
	Node0x56f0840:s1 -> Node0x56f0eb0;
	Node0x56f0f00 [shape=record,label="{parser.c:8943:|{<s0>T|<s1>F}}"];
	Node0x56f0f00:s0 -> Node0x56f0e60;
	Node0x56f0f00:s1 -> Node0x56f0eb0;
	Node0x56f0e60 [shape=record,label="{parser.c:8943:}"];
	Node0x56f0e60 -> Node0x56f0eb0;
	Node0x56f0eb0 [shape=record,label="{parser.c:8944:}"];
	Node0x56f0eb0 -> Node0x56f1fc0;
	Node0x56f1fc0 [shape=record,label="{parser.c:8947:|{<s0>T|<s1>F}}"];
	Node0x56f1fc0:s0 -> Node0x56f22b0;
	Node0x56f1fc0:s1 -> Node0x56f2260;
	Node0x56f22b0 [shape=record,label="{parser.c:8947:}"];
	Node0x56f22b0 -> Node0x56f2260;
	Node0x56f2260 [shape=record,label="{parser.c:8947:|{<s0>T|<s1>F}}"];
	Node0x56f2260:s0 -> Node0x56f2a10;
	Node0x56f2260:s1 -> Node0x56f21e0;
	Node0x56f2a10 [shape=record,label="{parser.c:8948:}"];
	Node0x56f2a10 -> Node0x56f1fc0;
	Node0x56f21e0 [shape=record,label="{parser.c:8951:|{<s0>T|<s1>F}}"];
	Node0x56f21e0:s0 -> Node0x56f3070;
	Node0x56f21e0:s1 -> Node0x56f3020;
	Node0x56f3070 [shape=record,label="{parser.c:8951:|{<s0>T|<s1>F}}"];
	Node0x56f3070:s0 -> Node0x56f2fd0;
	Node0x56f3070:s1 -> Node0x56f3020;
	Node0x56f2fd0 [shape=record,label="{parser.c:8952:}"];
	Node0x56f2fd0 -> Node0x56f3ab0;
	Node0x56f3ab0 [shape=record,label="{parser.c:8954:|{<s0>T|<s1>F}}"];
	Node0x56f3ab0:s0 -> Node0x56f3da0;
	Node0x56f3ab0:s1 -> Node0x56f3d50;
	Node0x56f3da0 [shape=record,label="{parser.c:8954:}"];
	Node0x56f3da0 -> Node0x56f3d50;
	Node0x56f3d50 [shape=record,label="{parser.c:8954:|{<s0>T|<s1>F}}"];
	Node0x56f3d50:s0 -> Node0x56f4500;
	Node0x56f3d50:s1 -> Node0x56f3cd0;
	Node0x56f4500 [shape=record,label="{parser.c:8955:}"];
	Node0x56f4500 -> Node0x56f3ab0;
	Node0x56f3cd0 [shape=record,label="{parser.c:8958:|{<s0>T|<s1>F}}"];
	Node0x56f3cd0:s0 -> Node0x56f4b60;
	Node0x56f3cd0:s1 -> Node0x56f4b10;
	Node0x56f4b60 [shape=record,label="{parser.c:8958:|{<s0>T|<s1>F}}"];
	Node0x56f4b60:s0 -> Node0x56f4ac0;
	Node0x56f4b60:s1 -> Node0x56f4f30;
	Node0x56f4f30 [shape=record,label="{parser.c:8958:|{<s0>T|<s1>F}}"];
	Node0x56f4f30:s0 -> Node0x56f4ac0;
	Node0x56f4f30:s1 -> Node0x56f5320;
	Node0x56f5320 [shape=record,label="{parser.c:8958:|{<s0>T|<s1>F}}"];
	Node0x56f5320:s0 -> Node0x56f55a0;
	Node0x56f5320:s1 -> Node0x56f52a0;
	Node0x56f55a0 [shape=record,label="{parser.c:8958:|{<s0>T|<s1>F}}"];
	Node0x56f55a0:s0 -> Node0x56f4ac0;
	Node0x56f55a0:s1 -> Node0x56f52a0;
	Node0x56f52a0 [shape=record,label="{parser.c:8958:|{<s0>T|<s1>F}}"];
	Node0x56f52a0:s0 -> Node0x56f4ac0;
	Node0x56f52a0:s1 -> Node0x56f4b10;
	Node0x56f4ac0 [shape=record,label="{parser.c:8960:}"];
	Node0x56f4ac0 -> Node0x56e5620;
	Node0x56f4b10 [shape=record,label="{parser.c:8963:}"];
	Node0x56f4b10 -> Node0x56f3020;
	Node0x56f3020 [shape=record,label="{parser.c:8967:|{<s0>T|<s1>F}}"];
	Node0x56f3020:s0 -> Node0x56f67c0;
	Node0x56f3020:s1 -> Node0x56f6770;
	Node0x56f67c0 [shape=record,label="{parser.c:8968:|{<s0>T|<s1>F}}"];
	Node0x56f67c0:s0 -> Node0x56f6720;
	Node0x56f67c0:s1 -> Node0x56f6770;
	Node0x56f6720 [shape=record,label="{parser.c:8969:}"];
	Node0x56f6720 -> Node0x56e5620;
	Node0x56f6770 [shape=record,label="{parser.c:8970:}"];
	Node0x56f6770 -> Node0x56e5620;
	Node0x56e5620 [shape=record,label="{parser.c:8971:}"];
}
