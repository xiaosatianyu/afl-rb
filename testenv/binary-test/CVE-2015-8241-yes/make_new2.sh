#!/bin/bash

export CurDir=`pwd`
export AFLGO=$CurDir/../../../aflgo
export TMP_DIR=$CurDir/temp_aflgo

#-----
export SUBJECT=$CurDir/libxml2
target=xmllint
targetDir=$SUBJECT
#-----


export CC=$AFLGO/afl-clang-fast
export CXX=$AFLGO/afl-clang-fast++
export CFLAGS="-targets=$TMP_DIR/BBtargets.txt  -outdir=$TMP_DIR  -flto -fuse-ld=gold -Wl,-plugin-opt=save-temps "
export CXXFLAGS="-targets=$TMP_DIR/BBtargets.txt  -outdir=$TMP_DIR  -flto -fuse-ld=gold -Wl,-plugin-opt=save-temps"


#清除记录 #添加目标
rm -rf $TMP_DIR
mkdir -p $TMP_DIR
cp $CurDir/BBtargets.txt $TMP_DIR

#获取距离
cd $SUBJECT

make distclean
./configure --disable-shared
AFL_DONT_OPTIMIZE=1  make -j4
   

#判定Ftargets.txt是否存在且不为空
if ! [ -s $TMP_DIR/Ftargets.txt ]; then
    echo "Ftargets.txt unexist or empyty"
    exit 
fi

#数据排序
cat $TMP_DIR/BBnames.txt | rev | cut  -d:   -f2-   | rev | sort | uniq > $TMP_DIR/BBnames2.txt && mv $TMP_DIR/BBnames2.txt $TMP_DIR/BBnames.txt  

cat $TMP_DIR/BBcalls.txt | sort | uniq > $TMP_DIR/BBcalls2.txt && mv $TMP_DIR/BBcalls2.txt $TMP_DIR/BBcalls.txt

#计算距离 需要保证
# import argparse
# import networkx as nx
# import re
$AFLGO/scripts/genDistance.sh  $targetDir  $TMP_DIR  $target     

#重新将距离编译进去
export CC=$AFLGO/afl-clang-fast
export CXX=$AFLGO/afl-clang-fast++
export CFLAGS="$COPY_CFLAGS -distance=$TMP_DIR/distance.cfg.txt  -hittargets=$TMP_DIR/hittarget.txt"
export CXXFLAGS="$COPY_CXXFLAGS -distance=$TMP_DIR/distance.cfg.txt  -hittargets=$TMP_DIR/hittarget.txt"
cp $CurDir/hittargets.txt $TMP_DIR

# 重新生成
cd $SUBJECT
./configure --disable-shared
make clean
AFL_DONT_OPTIMIZE=1   make -j4
cp $targetDir/$target  $TMP_DIR/$target-no-asan

make clean
AFL_DONT_OPTIMIZE=1  AFL_USE_ASAN=1 make -j4
cp $targetDir/$target  $TMP_DIR/$target-asan

